#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast and enable debugging to make the script output more verbose
set -e
set -x

# Directory to store custom set environment variables
PROFILE_PATH=".profile.d/julia.sh"

# Function to append environment variables to $PROFILE_PATH
set-env() {
  echo "export $1=$2" >>$PROFILE_PATH
}

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

cd "${BUILD_DIR}"

mkdir -p .profile.d

# Specify a default Julia version
DEFAULT_JULIA_VERSION="1.8.5"
# Check for JULIA_VERSION environment variable, use Project.toml if not set, or default
JULIA_VERSION=${JULIA_VERSION:-$(grep '^julia' Project.toml | cut -d '"' -f 2)}
JULIA_VERSION=${JULIA_VERSION:-$DEFAULT_JULIA_VERSION}

# Construct the Julia download URL based on the extracted version
JULIA_MAJOR_MINOR=$(echo "$JULIA_VERSION" | cut -d '.' -f 1-2)
JULIA_URL="https://julialang-s3.julialang.org/bin/linux/x64/${JULIA_MAJOR_MINOR}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz"

echo "-----> Installing Julia $JULIA_VERSION ...."
echo "        - $JULIA_URL"

# Download and extract Julia
curl -fLO "$JULIA_URL" || {
  echo " !     Failed to download Julia $JULIA_VERSION from $JULIA_URL"
  exit 1
}

mkdir julia
tar -xzf "julia-${JULIA_VERSION}-linux-x86_64.tar.gz" -C julia --strip-components=1
rm "julia-${JULIA_VERSION}-linux-x86_64.tar.gz"

# Verify Julia installation
if [ -d "julia/bin" ]; then
    echo "Julia directory exists. Listing contents:"
    ls -lah "julia/bin"
else
    echo "ERROR: Julia directory does not exist."
    exit 1
fi

# Set environment variables for runtime
set-env PATH "\$HOME/.apt/usr/bin:\$HOME/julia/bin:\$PATH"
set-env LIBRARY_PATH "\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/julia/lib:\$HOME/julia/lib/x86_64-linux-gnu:\$LIBRARY_PATH"
set-env LD_LIBRARY_PATH "\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/julia/lib:\$HOME/julia/lib/x86_64-linux-gnu:\$LD_LIBRARY_PATH"
set-env JULIA_LOAD_PATH "@:\$HOME:"

# Use the installed Julia for package operations
"${BUILD_DIR}/julia/bin/julia" --project=. -e 'using Pkg; Pkg.instantiate(); Pkg.precompile();'

# Copy the .julia directory to the build directory to cache the packages
cp -r ~/.julia "${BUILD_DIR}/.julia"

echo " done"
